name: Procurement Service CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'services/procurement-service/**'
      - 'infrastructure/kubernetes/procurement-service.yaml'
      - '.github/workflows/procurement-service.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'services/procurement-service/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'services/procurement-service/package-lock.json'
    
    - name: Install dependencies
      run: |
        cd services/procurement-service
        npm ci
    
    - name: Run linting
      run: |
        cd services/procurement-service
        npm run lint
    
    - name: Run tests
      run: |
        cd services/procurement-service
        npm test
    
    - name: Build
      run: |
        cd services/procurement-service
        npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: procurement-service-build
        path: services/procurement-service/dist

  build-and-push-image:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: procurement-service-build
        path: services/procurement-service/dist
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Azure Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: services/procurement-service
        push: true
        tags: ${{ secrets.ACR_LOGIN_SERVER }}/procurement-service:latest,${{ secrets.ACR_LOGIN_SERVER }}/procurement-service:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.ACR_LOGIN_SERVER }}/procurement-service:buildcache
        cache-to: type=registry,ref=${{ secrets.ACR_LOGIN_SERVER }}/procurement-service:buildcache,mode=max

  deploy:
    needs: build-and-push-image
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
    
    - name: Set up Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Get AKS credentials
      run: |
        az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}
    
    - name: Deploy to AKS
      run: |
        # Replace placeholders in the Kubernetes manifest
        sed -i 's|${ACR_LOGIN_SERVER}|${{ secrets.ACR_LOGIN_SERVER }}|g' infrastructure/kubernetes/procurement-service.yaml
        
        # Apply the Kubernetes manifest
        kubectl apply -f infrastructure/kubernetes/procurement-service.yaml
        
        # Force a new rollout to pull the latest image
        kubectl rollout restart deployment procurement-service
        
        # Wait for the rollout to complete
        kubectl rollout status deployment procurement-service --timeout=300s
